def awsECRURL="347880001135.dkr.ecr.ap-northeast-2.amazonaws.com/test"
def awsKey="aws-key"
def awsRegion="ap-northeast-2"
def branch="main"
def commitMsg="mini-project"
def directoryPath="Part4_Kubernetes/Chapter11/mini-project/service"
def githubEmail="skwjdgh1@gmail.com"
def githubKey="github-key"
def githubSSHURL="git@github.com:Najeongho/FastCampus.git"
def imageTag="green"

podTemplate(yaml: '''
              apiVersion: v1
              kind: Pod
              spec:
                volumes:
                - name: docker-socket
                  emptyDir: {}
                containers:
                - name: docker
                  image: docker:23.0.5-git
                  readinessProbe:
                    exec:
                      command: [sh, -c, "ls -S /var/run/docker.sock"]
                  command:
                  - sleep
                  args:
                  - 99d
                  volumeMounts:
                  - name: docker-socket
                    mountPath: /var/run
                - name: docker-daemon
                  image: docker:23.0.5-dind
                  securityContext:
                    privileged: true
                  volumeMounts:
                  - name: docker-socket
                    mountPath: /var/run
''') {
    node(POD_LABEL) {

        stage('Checkout') {

            container('docker'){
                checkout scm
            }

        }

        stage('Docker Build') {

            dir(path: "${directoryPath}/container"){
                container('docker') {
                    image = docker.build("${awsECRURL}:${imageTag}","--build-arg COLOR=${imageTag} .")
                }
            }

        }

        stage('ECR Push') {

            container('docker') {
                docker.withRegistry("https://${awsECRURL}", "ecr:${awsRegion}:${awsKey}") {
                    image.push()
                }
            }

        }

        stage('Deploy'){
            container('docker'){
                dir("DEPLOY"){
                    git branch: 'main',
                        credentialsId: "${githubKey}",
                        url: "${githubSSHURL}"

                    sh("""
                        set +x
                        export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                        git config --global user.email ${githubEmail}
                        git config --global --add safe.directory /home/jenkins/agent/workspace/mini-project/DEPLOY
                        ssh-keyscan github.com >> ~/.ssh/known_hosts
                        sed -i 's/tag:.*/tag: ${imageTag}/g' ${directoryPath}/helm-charts/values.yaml
                        git commit -a -m ${commitMsg}
                        git remote set-url origin ${githubSSHURL}
                        git push -u origin ${branch}
                    """)
                }
            }
        }
    }
}